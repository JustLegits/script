--[[
    local player   = game:GetService("Players").LocalPlayer
    local pg       = player:WaitForChild("PlayerGui")
    local itemsGui = pg:WaitForChild("Items")
    itemsGui.Enabled = not itemsGui.Enabled
--]]

-- LocalScript: Dropdown with Scrollable Options and Toggle Button

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local pg = player:WaitForChild("PlayerGui")

-- Configuration
local options = {"Items", "Merchant", "BossAttack", "Collection", "Crafting", "Quest", "UnitsGacha"}
local optionHeight = 30
local dropdownH = 40
local maxListHeight = 200
local optionsH = #options * optionHeight
local optsFrameH = math.min(optionsH, maxListHeight)
local buttonHeight = 40

-- Calculate overall frame size
local frameW = 300
local frameH = 10 + dropdownH + optsFrameH + 10 + buttonHeight + 10

-- Create controller UI
local controllerGui = Instance.new("ScreenGui")
controllerGui.Name = "UIController"
controllerGui.ResetOnSpawn = false
controllerGui.Parent = pg

local frame = Instance.new("Frame", controllerGui)
frame.Size = UDim2.new(0, frameW, 0, frameH)
frame.Position = UDim2.new(0.5, -frameW/2, 0.5, -frameH/2)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0.5, 0.5)

-- Dropdown button
local dropdownBtn = Instance.new("TextButton", frame)
dropdownBtn.Size = UDim2.new(1, -20, 0, dropdownH)
dropdownBtn.Position = UDim2.new(0, 10, 0, 10)
dropdownBtn.Text = options[1]
dropdownBtn.Font = Enum.Font.SourceSans
dropdownBtn.TextSize = 24
dropdownBtn.TextColor3 = Color3.new(1, 1, 1)
dropdownBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
dropdownBtn.BorderSizePixel = 0

-- Scrollable options list
local optsFrame = Instance.new("ScrollingFrame", frame)
optsFrame.Size = UDim2.new(1, -20, 0, optsFrameH)
optsFrame.Position = UDim2.new(0, 10, 0, 10 + dropdownH)
optsFrame.CanvasSize = UDim2.new(0, 0, 0, optionsH)
optsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
optsFrame.BorderSizePixel = 0
optsFrame.Visible = false

local layout = Instance.new("UIListLayout", optsFrame)
layout.SortOrder = Enum.SortOrder.LayoutOrder

for i, name in ipairs(options) do
    local btn = Instance.new("TextButton", optsFrame)
    btn.Size = UDim2.new(1, 0, 0, optionHeight)
    btn.LayoutOrder = i
    btn.Text = name
    btn.Font = Enum.Font.SourceSans
    btn.TextSize = 20
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    btn.BorderSizePixel = 0
    btn.MouseButton1Click:Connect(function()
        dropdownBtn.Text = name
        optsFrame.Visible = false
    end)
end

dropdownBtn.MouseButton1Click:Connect(function()
    optsFrame.Visible = not optsFrame.Visible
end)

-- Single Toggle button
local toggleBtn = Instance.new("TextButton", frame)
local btnY = 10 + dropdownH + optsFrameH + 10
toggleBtn.Size = UDim2.new(1, -20, 0, buttonHeight)
toggleBtn.Position = UDim2.new(0, 10, 0, btnY)
toggleBtn.Text = "Toggle"
toggleBtn.Font = Enum.Font.SourceSans
toggleBtn.TextSize = 22
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 215)
toggleBtn.BorderSizePixel = 0

toggleBtn.MouseButton1Click:Connect(function()
    local name = dropdownBtn.Text
    local target = pg:FindFirstChild(name)
    if target and target:IsA("ScreenGui") then
        target.Enabled = not target.Enabled
    else
        warn("Không tìm thấy ScreenGui tên “.. name ..” trong PlayerGui")
    end
end)

toggleBtn.MouseButton1Click:Connect(function()
    toggleGui(dropdownBtn.Text)
end)
